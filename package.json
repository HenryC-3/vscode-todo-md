{
	"name": "todo-md",
	"displayName": "Todo MD",
	"description": "Todo tracking based on `todo.txt` format.",
	"version": "2.0.10",
	"publisher": "usernamehw",
	"license": "MIT",
	"icon": "img/icon.png",
	"engines": {
		"vscode": "^1.50.0"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/usernamehw/vscode-todo-md"
	},
	"bugs": {
		"url": "https://github.com/usernamehw/vscode-todo-md/issues"
	},
	"keywords": [
		"todotxt",
		"todo",
		"todos",
		"todolist",
		"todoapp",
		"task",
		"tasks",
		"gtd",
		"markdown",
		"plaintext"
	],
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onStartupFinished",
		"onView:todomd.tags",
		"onView:todomd.tasks",
		"onView:todomd.projects",
		"onView:todomd.contexts",
		"onView:todomd.archived",
		"onView:todomd.generic1",
		"onView:todomd.generic2",
		"onView:todomd.generic3",
		"onView:todomd.webviewTasks"
	],
	"main": "./dist/extension",
	"preview": true,
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "Todo Markdown",
			"properties": {
				"todomd.webview.showCompleted": {
					"type": "boolean",
					"markdownDescription": "Whether completed tasks are shown or not in the webview.",
					"default": true
				},
				"todomd.webview.showRecurringCompleted": {
					"type": "boolean",
					"markdownDescription": "Whether recurring completed tasks are shown or not in the webview.",
					"default": true
				},
				"todomd.webview.showPriority": {
					"type": "boolean",
					"markdownDescription": "Controls whether priority is shown in the webview.",
					"default": true
				},
				"todomd.webview.fontSize": {
					"type": "string",
					"markdownDescription": "Controls font size in the webview. [CSS Units](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size)",
					"default": "14px"
				},
				"todomd.webview.fontFamily": {
					"type": "string",
					"markdownDescription": "Controls font family in the webview. [CSS Units](https://developer.mozilla.org/en-US/docs/Web/CSS/font-family)",
					"default": "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif, 'Segoe UI Emoji'"
				},
				"todomd.webview.padding": {
					"type": "string",
					"markdownDescription": "Controls spacing between items in a list. [CSS Units](https://developer.mozilla.org/en-US/docs/Web/CSS/padding)",
					"default": "0px"
				},
				"todomd.webview.customCheckboxEnabled": {
					"type": "boolean",
					"markdownDescription": "Whether checkbox is rendered as native input element or a custom styled element.",
					"default": false
				},
				"todomd.webview.checkboxStyle": {
					"type": "string",
					"markdownDescription": "Controls checkbox style (round, square...).",
					"enum": [
						"round",
						"rounded-square",
						"fill-round",
						"fill-square",
						"fill-rounded-square",
						"low-contrast"
					],
					"default": "rounded-square"
				},
				"todomd.webview.markdownEnabled": {
					"type": "boolean",
					"markdownDescription": "Whether to render tasks as markdown (treating every line/task as a separate entity).",
					"default": false
				},
				"todomd.defaultFile": {
					"type": "string",
					"markdownDescription": "Absolute path to file that Tree Views or commands use when no editor is open that matches `#todomd.activatePattern#`",
					"default": ""
				},
				"todomd.defaultArchiveFile": {
					"type": "string",
					"markdownDescription": "Absolute path to file that all archived tasks will be moved to",
					"default": ""
				},
				"todomd.autoArchiveTasks": {
					"type": "boolean",
					"markdownDescription": "When enabled - will move completed tasks automatically (when `toggleDone` command runs).",
					"default": false
				},
				"todomd.activatePattern": {
					"type": "string",
					"markdownDescription": "Choose files that extension will operate on. By default activated on 2 files (todo.md & todo.archive.md). This format is called `Glob`. Examples:\n\nActivate on any (.txt) file - `**/*.txt`.\n\nActivate only on single file (todo.txt) - `**/todo.txt`\n\nActivate on 2 files (todo.txt or task.txt) - `**/{todo,task}.txt`",
					"default": "**/{todo,todo.archive}.md"
				},
				"todomd.doneSymbol": {
					"type": "string",
					"default": "x "
				},
				"todomd.getNextNumberOfTasks": {
					"type": "number",
					"default": 5,
					"minimum": 1,
					"maximum": 15,
					"markdownDescription": "Number of tasks returned by `getFewNextTasks` command."
				},
				"todomd.sortTagsView": {
					"type": "string",
					"enum": [
						"alphabetic",
						"frequency"
					],
					"default": "frequency"
				},
				"todomd.tags": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"description": "Tags added to autocomplete.",
					"default": []
				},
				"todomd.projects": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"description": "Projects added to autocomplete.",
					"default": []
				},
				"todomd.contexts": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"description": "Contexts added to autocomplete.",
					"default": []
				},
				"todomd.addCompletionDate": {
					"type": "boolean",
					"markdownDescription": "When completing a task add completion date to it: `{cm:2020-04-30}`",
					"default": true
				},
				"todomd.addCreationDate": {
					"type": "boolean",
					"markdownDescription": "When creating a task add creation date to it: `{cr:2020-04-30}`",
					"default": false
				},
				"todomd.completionDateIncludeTime": {
					"type": "boolean",
					"markdownDescription": "When completing a task add date and time: `{cm:2020-04-30T09:11:17}`",
					"default": false
				},
				"todomd.creationDateIncludeTime": {
					"type": "boolean",
					"markdownDescription": "When creating a task add date and time: `{cr:2020-04-30T09:11:17}`",
					"default": false
				},
				"todomd.defaultPriority": {
					"type": "string",
					"markdownDescription": "Used in sorting for tasks without priority.",
					"default": "G"
				},
				"todomd.isDev": {
					"type": "boolean",
					"markdownDescription": "For emulating dev mode. Most likely of no use to anyone, except the extension author.",
					"default": false
				},
				"todomd.savedFilters": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"title": {
								"type": "string"
							},
							"filter": {
								"type": "string"
							}
						}
					},
					"markdownDescription": "Filters that you can pick when applying a filter.",
					"default": []
				},
				"todomd.treeViews": {
					"type": "array",
					"items": {
						"type": "object",
						"required": [
							"filter",
							"title"
						],
						"properties": {
							"title": {
								"type": "string"
							},
							"filter": {
								"type": "string"
							}
						}
					},
					"maxLength": 3,
					"markdownDescription": "Add more tree views with predefined filters.",
					"default": [
						{
							"title": "due",
							"filter": "$due -$done"
						}
					]
				},
				"todomd.decorations": {
					"type": "object",
					"description": "Advanced decoration tweaking.",
					"default": {
						"project": {},
						"context": {},
						"comment": {}
					},
					"patternProperties": {
						"^(project|context|comment)$": {
							"type": "object",
							"properties": {
								"isWholeLine": {
									"description": "Should the decoration be rendered also on the whitespace after the line text.\nDefaults to `false`.\nShould the decoration be rendered also on the whitespace after the line text.\nDefaults to `false`.",
									"type": "boolean"
								},
								"rangeBehavior": {
									"description": "Customize the growing behavior of the decoration when edits occur at the edges of the decoration's range.\nDefaults to `DecorationRangeBehavior.OpenOpen`.\nCustomize the growing behavior of the decoration when edits occur at the edges of the decoration's range.\nDefaults to `DecorationRangeBehavior.OpenOpen`.",
									"enum": [
										0,
										1,
										2,
										3
									],
									"type": "number",
									"enumDescriptions": [
										"OpenOpen",
										"ClosedClosed",
										"OpenClosed",
										"ClosedOpen"
									]
								},
								"overviewRulerLane": {
									"enum": [
										1,
										2,
										4,
										7
									],
									"type": "number",
									"enumDescriptions": [
										"Left",
										"Center",
										"Right",
										"Full"
									]
								},
								"light": {
									"description": "Represents theme specific rendering styles for a [text editor decoration](#TextEditorDecorationType).\nRepresents theme specific rendering styles for a [text editor decoration](#TextEditorDecorationType).",
									"type": "object",
									"properties": {
										"backgroundColor": {
											"format": "color",
											"type": "string"
										},
										"outline": {
											"type": "string"
										},
										"outlineColor": {
											"format": "color",
											"type": "string"
										},
										"outlineStyle": {
											"type": "string"
										},
										"outlineWidth": {
											"type": "string"
										},
										"border": {
											"type": "string"
										},
										"borderColor": {
											"format": "color",
											"type": "string"
										},
										"borderRadius": {
											"type": "string"
										},
										"borderSpacing": {
											"type": "string"
										},
										"borderStyle": {
											"type": "string"
										},
										"borderWidth": {
											"type": "string"
										},
										"fontStyle": {
											"type": "string"
										},
										"fontWeight": {
											"type": "string"
										},
										"textDecoration": {
											"type": "string"
										},
										"cursor": {
											"type": "string"
										},
										"color": {
											"format": "color",
											"type": "string"
										},
										"opacity": {
											"type": "string"
										},
										"letterSpacing": {
											"type": "string"
										},
										"gutterIconPath": {
											"description": "An **absolute path** or an URI to an image to be rendered in the gutter.\nAn **absolute path** or an URI to an image to be rendered in the gutter.",
											"type": "string"
										},
										"gutterIconSize": {
											"description": "Specifies the size of the gutter icon.\nAvailable values are 'auto', 'contain', 'cover' and any percentage value.\nFor further information: https://msdn.microsoft.com/en-us/library/jj127316(v=vs.85).aspx\nSpecifies the size of the gutter icon.\nAvailable values are 'auto', 'contain', 'cover' and any percentage value.\nFor further information: https://msdn.microsoft.com/en-us/library/jj127316(v=vs.85).aspx",
											"type": "string"
										},
										"overviewRulerColor": {
											"format": "color",
											"type": "string"
										},
										"before": {
											"description": "Defines the rendering options of the attachment that is inserted before the decorated text.\nDefines the rendering options of the attachment that is inserted before the decorated text.",
											"type": "object",
											"properties": {
												"contentText": {
													"description": "Defines a text content that is shown in the attachment. Either an icon or a text can be shown, but not both.\nDefines a text content that is shown in the attachment. Either an icon or a text can be shown, but not both.",
													"type": "string"
												},
												"contentIconPath": {
													"description": "An **absolute path** or an URI to an image to be rendered in the attachment. Either an icon\nor a text can be shown, but not both.\nAn **absolute path** or an URI to an image to be rendered in the attachment. Either an icon\nor a text can be shown, but not both.",
													"type": "string"
												},
												"border": {
													"type": "string"
												},
												"borderColor": {
													"format": "color",
													"type": "string"
												},
												"fontStyle": {
													"type": "string"
												},
												"fontWeight": {
													"type": "string"
												},
												"textDecoration": {
													"type": "string"
												},
												"color": {
													"format": "color",
													"type": "string"
												},
												"backgroundColor": {
													"format": "color",
													"type": "string"
												},
												"margin": {
													"type": "string"
												},
												"width": {
													"type": "string"
												},
												"height": {
													"type": "string"
												}
											}
										},
										"after": {
											"description": "Defines the rendering options of the attachment that is inserted after the decorated text.\nDefines the rendering options of the attachment that is inserted after the decorated text.",
											"type": "object",
											"properties": {
												"contentText": {
													"description": "Defines a text content that is shown in the attachment. Either an icon or a text can be shown, but not both.\nDefines a text content that is shown in the attachment. Either an icon or a text can be shown, but not both.",
													"type": "string"
												},
												"contentIconPath": {
													"description": "An **absolute path** or an URI to an image to be rendered in the attachment. Either an icon\nor a text can be shown, but not both.\nAn **absolute path** or an URI to an image to be rendered in the attachment. Either an icon\nor a text can be shown, but not both.",
													"type": "string"
												},
												"border": {
													"type": "string"
												},
												"borderColor": {
													"format": "color",
													"type": "string"
												},
												"fontStyle": {
													"type": "string"
												},
												"fontWeight": {
													"type": "string"
												},
												"textDecoration": {
													"type": "string"
												},
												"color": {
													"format": "color",
													"type": "string"
												},
												"backgroundColor": {
													"format": "color",
													"type": "string"
												},
												"margin": {
													"type": "string"
												},
												"width": {
													"type": "string"
												},
												"height": {
													"type": "string"
												}
											}
										}
									}
								},
								"dark": {
									"description": "Represents theme specific rendering styles for a [text editor decoration](#TextEditorDecorationType).\nRepresents theme specific rendering styles for a [text editor decoration](#TextEditorDecorationType).",
									"type": "object",
									"properties": {
										"backgroundColor": {
											"format": "color",
											"type": "string"
										},
										"outline": {
											"type": "string"
										},
										"outlineColor": {
											"format": "color",
											"type": "string"
										},
										"outlineStyle": {
											"type": "string"
										},
										"outlineWidth": {
											"type": "string"
										},
										"border": {
											"type": "string"
										},
										"borderColor": {
											"format": "color",
											"type": "string"
										},
										"borderRadius": {
											"type": "string"
										},
										"borderSpacing": {
											"type": "string"
										},
										"borderStyle": {
											"type": "string"
										},
										"borderWidth": {
											"type": "string"
										},
										"fontStyle": {
											"type": "string"
										},
										"fontWeight": {
											"type": "string"
										},
										"textDecoration": {
											"type": "string"
										},
										"cursor": {
											"type": "string"
										},
										"color": {
											"format": "color",
											"type": "string"
										},
										"opacity": {
											"type": "string"
										},
										"letterSpacing": {
											"type": "string"
										},
										"gutterIconPath": {
											"description": "An **absolute path** or an URI to an image to be rendered in the gutter.\nAn **absolute path** or an URI to an image to be rendered in the gutter.",
											"type": "string"
										},
										"gutterIconSize": {
											"description": "Specifies the size of the gutter icon.\nAvailable values are 'auto', 'contain', 'cover' and any percentage value.\nFor further information: https://msdn.microsoft.com/en-us/library/jj127316(v=vs.85).aspx\nSpecifies the size of the gutter icon.\nAvailable values are 'auto', 'contain', 'cover' and any percentage value.\nFor further information: https://msdn.microsoft.com/en-us/library/jj127316(v=vs.85).aspx",
											"type": "string"
										},
										"overviewRulerColor": {
											"format": "color",
											"type": "string"
										},
										"before": {
											"description": "Defines the rendering options of the attachment that is inserted before the decorated text.\nDefines the rendering options of the attachment that is inserted before the decorated text.",
											"type": "object",
											"properties": {
												"contentText": {
													"description": "Defines a text content that is shown in the attachment. Either an icon or a text can be shown, but not both.\nDefines a text content that is shown in the attachment. Either an icon or a text can be shown, but not both.",
													"type": "string"
												},
												"contentIconPath": {
													"description": "An **absolute path** or an URI to an image to be rendered in the attachment. Either an icon\nor a text can be shown, but not both.\nAn **absolute path** or an URI to an image to be rendered in the attachment. Either an icon\nor a text can be shown, but not both.",
													"type": "string"
												},
												"border": {
													"type": "string"
												},
												"borderColor": {
													"format": "color",
													"type": "string"
												},
												"fontStyle": {
													"type": "string"
												},
												"fontWeight": {
													"type": "string"
												},
												"textDecoration": {
													"type": "string"
												},
												"color": {
													"format": "color",
													"type": "string"
												},
												"backgroundColor": {
													"format": "color",
													"type": "string"
												},
												"margin": {
													"type": "string"
												},
												"width": {
													"type": "string"
												},
												"height": {
													"type": "string"
												}
											}
										},
										"after": {
											"description": "Defines the rendering options of the attachment that is inserted after the decorated text.\nDefines the rendering options of the attachment that is inserted after the decorated text.",
											"type": "object",
											"properties": {
												"contentText": {
													"description": "Defines a text content that is shown in the attachment. Either an icon or a text can be shown, but not both.\nDefines a text content that is shown in the attachment. Either an icon or a text can be shown, but not both.",
													"type": "string"
												},
												"contentIconPath": {
													"description": "An **absolute path** or an URI to an image to be rendered in the attachment. Either an icon\nor a text can be shown, but not both.\nAn **absolute path** or an URI to an image to be rendered in the attachment. Either an icon\nor a text can be shown, but not both.",
													"type": "string"
												},
												"border": {
													"type": "string"
												},
												"borderColor": {
													"format": "color",
													"type": "string"
												},
												"fontStyle": {
													"type": "string"
												},
												"fontWeight": {
													"type": "string"
												},
												"textDecoration": {
													"type": "string"
												},
												"color": {
													"format": "color",
													"type": "string"
												},
												"backgroundColor": {
													"format": "color",
													"type": "string"
												},
												"margin": {
													"type": "string"
												},
												"width": {
													"type": "string"
												},
												"height": {
													"type": "string"
												}
											}
										}
									}
								},
								"backgroundColor": {
									"format": "color",
									"type": "string"
								},
								"outline": {
									"type": "string"
								},
								"outlineColor": {
									"format": "color",
									"type": "string"
								},
								"outlineStyle": {
									"type": "string"
								},
								"outlineWidth": {
									"type": "string"
								},
								"border": {
									"type": "string"
								},
								"borderColor": {
									"format": "color",
									"type": "string"
								},
								"borderRadius": {
									"type": "string"
								},
								"borderSpacing": {
									"type": "string"
								},
								"borderStyle": {
									"type": "string"
								},
								"borderWidth": {
									"type": "string"
								},
								"fontStyle": {
									"type": "string"
								},
								"fontWeight": {
									"type": "string"
								},
								"textDecoration": {
									"type": "string"
								},
								"cursor": {
									"type": "string"
								},
								"color": {
									"format": "color",
									"type": "string"
								},
								"opacity": {
									"type": "string"
								},
								"letterSpacing": {
									"type": "string"
								},
								"gutterIconPath": {
									"description": "An **absolute path** or an URI to an image to be rendered in the gutter.\nAn **absolute path** or an URI to an image to be rendered in the gutter.",
									"type": "string"
								},
								"gutterIconSize": {
									"description": "Specifies the size of the gutter icon.\nAvailable values are 'auto', 'contain', 'cover' and any percentage value.\nFor further information: https://msdn.microsoft.com/en-us/library/jj127316(v=vs.85).aspx\nSpecifies the size of the gutter icon.\nAvailable values are 'auto', 'contain', 'cover' and any percentage value.\nFor further information: https://msdn.microsoft.com/en-us/library/jj127316(v=vs.85).aspx",
									"type": "string"
								},
								"overviewRulerColor": {
									"format": "color",
									"type": "string"
								},
								"before": {
									"description": "Defines the rendering options of the attachment that is inserted before the decorated text.\nDefines the rendering options of the attachment that is inserted before the decorated text.",
									"type": "object",
									"properties": {
										"contentText": {
											"description": "Defines a text content that is shown in the attachment. Either an icon or a text can be shown, but not both.\nDefines a text content that is shown in the attachment. Either an icon or a text can be shown, but not both.",
											"type": "string"
										},
										"contentIconPath": {
											"description": "An **absolute path** or an URI to an image to be rendered in the attachment. Either an icon\nor a text can be shown, but not both.\nAn **absolute path** or an URI to an image to be rendered in the attachment. Either an icon\nor a text can be shown, but not both.",
											"type": "string"
										},
										"border": {
											"type": "string"
										},
										"borderColor": {
											"format": "color",
											"type": "string"
										},
										"fontStyle": {
											"type": "string"
										},
										"fontWeight": {
											"type": "string"
										},
										"textDecoration": {
											"type": "string"
										},
										"color": {
											"format": "color",
											"type": "string"
										},
										"backgroundColor": {
											"format": "color",
											"type": "string"
										},
										"margin": {
											"type": "string"
										},
										"width": {
											"type": "string"
										},
										"height": {
											"type": "string"
										}
									}
								},
								"after": {
									"description": "Defines the rendering options of the attachment that is inserted after the decorated text.\nDefines the rendering options of the attachment that is inserted after the decorated text.",
									"type": "object",
									"properties": {
										"contentText": {
											"description": "Defines a text content that is shown in the attachment. Either an icon or a text can be shown, but not both.\nDefines a text content that is shown in the attachment. Either an icon or a text can be shown, but not both.",
											"type": "string"
										},
										"contentIconPath": {
											"description": "An **absolute path** or an URI to an image to be rendered in the attachment. Either an icon\nor a text can be shown, but not both.\nAn **absolute path** or an URI to an image to be rendered in the attachment. Either an icon\nor a text can be shown, but not both.",
											"type": "string"
										},
										"border": {
											"type": "string"
										},
										"borderColor": {
											"format": "color",
											"type": "string"
										},
										"fontStyle": {
											"type": "string"
										},
										"fontWeight": {
											"type": "string"
										},
										"textDecoration": {
											"type": "string"
										},
										"color": {
											"format": "color",
											"type": "string"
										},
										"backgroundColor": {
											"format": "color",
											"type": "string"
										},
										"margin": {
											"type": "string"
										},
										"width": {
											"type": "string"
										},
										"height": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"commands": [
			{
				"command": "todomd.showWebviewSettings",
				"title": "Show Webview Settings",
				"category": "Todo MD",
				"icon": "$(settings-gear)"
			},
			{
				"command": "todomd.incrementPriority",
				"title": "Increment priority",
				"category": "Todo MD"
			},
			{
				"command": "todomd.decrementPriority",
				"title": "Decrement priority",
				"category": "Todo MD"
			},
			{
				"command": "todomd.toggleDone",
				"title": "Toggle completion",
				"category": "Todo MD",
				"icon": "$(check)"
			},
			{
				"command": "todomd.hideTask",
				"title": "Hide the Task",
				"category": "Todo MD"
			},
			{
				"command": "todomd.deleteTask",
				"title": "❌ Delete the Task",
				"category": "Todo MD"
			},
			{
				"command": "todomd.addTaskToDefaultFile",
				"title": "Add a Task",
				"category": "Todo MD",
				"icon": "$(add)"
			},
			{
				"command": "todomd.sortByPriority",
				"title": "Sort by priority",
				"category": "Todo MD"
			},
			{
				"command": "todomd.setDueDate",
				"title": "Set due date",
				"category": "Todo MD"
			},
			{
				"command": "todomd.setDate",
				"title": "Set date",
				"category": "Todo MD"
			},
			{
				"command": "todomd.agenda",
				"title": "Agenda",
				"category": "Todo MD"
			},
			{
				"command": "todomd.calendar",
				"title": "Calendar",
				"category": "Todo MD"
			},
			{
				"command": "todomd.archiveCompletedTasks",
				"title": "Archive completed Tasks",
				"category": "Todo MD"
			},
			{
				"command": "todomd.archiveSelectedCompletedTasks",
				"title": "🗃 Archive selected completed Tasks",
				"category": "Todo MD"
			},
			{
				"command": "todomd.openDefaultArvhiveFile",
				"title": "Open default archive file",
				"category": "Todo MD"
			},
			{
				"command": "todomd.openDefaultFile",
				"title": "Open default file",
				"category": "Todo MD",
				"icon": "$(go-to-file)"
			},
			{
				"command": "todomd.createSimilarTask",
				"title": "Create similar task (same tags, projects, contexts).",
				"category": "Todo MD"
			},
			{
				"command": "todomd.completeTask",
				"title": "Complete a Task",
				"category": "Todo MD"
			},
			{
				"command": "todomd.getNextTask",
				"title": "Get 1 next task",
				"category": "Todo MD"
			},
			{
				"command": "todomd.getFewNextTasks",
				"title": "Get a few next tasks.",
				"category": "Todo MD"
			},
			{
				"command": "todomd.getRandomTask",
				"title": "Get random task",
				"category": "Todo MD"
			},
			{
				"command": "todomd.filter",
				"title": "Filter",
				"category": "Todo MD",
				"icon": "$(filter)"
			},
			{
				"command": "todomd.clearFilter",
				"title": "Clear Filter",
				"category": "Todo MD",
				"icon": "$(clear-all)"
			},
			{
				"command": "todomd.clearGlobalState",
				"title": "Clear global state",
				"category": "Todo MD"
			},
			{
				"command": "todomd.resetAllRecurringTasks",
				"title": "Reset all Recurring tasks",
				"category": "Todo MD"
			},
			{
				"command": "todomd.followLink",
				"title": "Follow link",
				"category": "Todo MD"
			},
			{
				"command": "todomd.setLastVisit",
				"title": "DEV: Set last visit",
				"category": "Todo MD"
			}
		],
		"keybindings": [
			{
				"command": "todomd.toggleDone",
				"key": "Alt+D",
				"when": "editorTextFocus && todomd:isActive"
			}
		],
		"colors": [
			{
				"id": "todomd.commentForeground",
				"defaults": {
					"light": "#b4b4b4",
					"dark": "#b4b4b4",
					"highContrast": "#b4b4b4"
				},
				"description": "Not empty"
			},
			{
				"id": "todomd.priorityAForeground",
				"defaults": {
					"light": "#ec4f47",
					"dark": "#ec4f47",
					"highContrast": "#ec4f47"
				},
				"description": "Not empty"
			},
			{
				"id": "todomd.priorityBForeground",
				"defaults": {
					"light": "#fd9f9a",
					"dark": "#fd9f9a",
					"highContrast": "#fd9f9a"
				},
				"description": "Not empty"
			},
			{
				"id": "todomd.priorityCForeground",
				"defaults": {
					"light": "#ffb648",
					"dark": "#ffb039",
					"highContrast": "#ffb648"
				},
				"description": "Not empty"
			},
			{
				"id": "todomd.priorityDForeground",
				"defaults": {
					"light": "#f1d900",
					"dark": "#e2cb00",
					"highContrast": "#f1d900"
				},
				"description": "Not empty"
			},
			{
				"id": "todomd.priorityEForeground",
				"defaults": {
					"light": "#ace000",
					"dark": "#97c500",
					"highContrast": "#ace000"
				},
				"description": "Not empty"
			},
			{
				"id": "todomd.priorityFForeground",
				"defaults": {
					"light": "#00cfad",
					"dark": "#00cfad",
					"highContrast": "#00cfad"
				},
				"description": "Not empty"
			},
			{
				"id": "todomd.tagForeground",
				"defaults": {
					"light": "#029cdf",
					"dark": "#1abaff",
					"highContrast": "#1abaff"
				},
				"description": "Not empty"
			},
			{
				"id": "todomd.contextForeground",
				"defaults": {
					"light": "#7284eb",
					"dark": "#7284eb",
					"highContrast": "#7284eb"
				},
				"description": "Not empty"
			},
			{
				"id": "todomd.specialTagForeground",
				"defaults": {
					"light": "#cf2596",
					"dark": "#cf2596",
					"highContrast": "#cf2596"
				},
				"description": "Not empty"
			},
			{
				"id": "todomd.tagDelimiterForeground",
				"defaults": {
					"light": "#b4b4b4",
					"dark": "#b4b4b4",
					"highContrast": "#b4b4b4"
				},
				"description": "Not empty"
			},
			{
				"id": "todomd.projectForeground",
				"defaults": {
					"light": "#36cc9a",
					"dark": "#36cc9a",
					"highContrast": "#36cc9a"
				},
				"description": "Not empty"
			},
			{
				"id": "todomd.notDueForeground",
				"defaults": {
					"light": "#afafaf",
					"dark": "#afafaf",
					"highContrast": "#afafaf"
				},
				"description": "Not empty"
			},
			{
				"id": "todomd.dueForeground",
				"defaults": {
					"light": "#5faedb",
					"dark": "#5faedb",
					"highContrast": "#5faedb"
				},
				"description": "Not empty"
			},
			{
				"id": "todomd.overdueForeground",
				"defaults": {
					"light": "#d44343",
					"dark": "#f64f4f",
					"highContrast": "#f64f4f"
				},
				"description": "Not empty"
			},
			{
				"id": "todomd.invalidDueDateForeground",
				"defaults": {
					"light": "#ffffff",
					"dark": "#ffffff",
					"highContrast": "#ffffff"
				},
				"description": "Not empty"
			},
			{
				"id": "todomd.invalidDueDateBackground",
				"defaults": {
					"light": "#f75454",
					"dark": "#f75454",
					"highContrast": "#f75454"
				},
				"description": "Not empty"
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "todomd.filter",
					"when": "view == todomd.tasks && !todomd:filterActive",
					"group": "navigation"
				},
				{
					"command": "todomd.clearFilter",
					"when": "view == todomd.tasks && todomd:filterActive",
					"group": "navigation"
				},
				{
					"command": "todomd.addTaskToDefaultFile",
					"when": "view =~ /todomd.(tasks|webviewTasks)/",
					"group": "navigation"
				},
				{
					"command": "todomd.openDefaultFile",
					"when": "view == todomd.tasks",
					"group": "navigation"
				},
				{
					"command": "todomd.showWebviewSettings",
					"when": "view == todomd.webviewTasks",
					"group": "navigation@9"
				}
			],
			"view/item/context": [
				{
					"command": "todomd.toggleDone",
					"when": "view =~ /todomd.(tasks|generic1|generic2|generic3)/"
				},
				{
					"command": "todomd.hideTask",
					"when": "view =~ /todomd.(tasks|generic1|generic2|generic3)/"
				},
				{
					"command": "todomd.deleteTask",
					"when": "view =~ /todomd.(tasks|generic1|generic2|generic3)/"
				},
				{
					"command": "todomd.followLink",
					"when": "view =~ /todomd.(tasks|generic1|generic2|generic3)/ && viewItem == link"
				},
				{
					"command": "todomd.toggleDone",
					"when": "view =~ /todomd.(tasks|generic1|generic2|generic3)/",
					"group": "inline"
				}
			],
			"editor/context": [
				{
					"command": "todomd.archiveSelectedCompletedTasks",
					"when": "todomd:isActive"
				}
			],
			"commandPalette": [
				{
					"command": "todomd.followLink",
					"when": "never"
				},
				{
					"command": "todomd.hideTask",
					"when": "never"
				},
				{
					"command": "todomd.deleteTask",
					"when": "never"
				},
				{
					"command": "todomd.setDueDate",
					"when": "todomd:isActive"
				},
				{
					"command": "todomd.setDate",
					"when": "todomd:isActive"
				},
				{
					"command": "todomd.toggleDone",
					"when": "todomd:isActive"
				},
				{
					"command": "todomd.sortByPriority",
					"when": "todomd:isActive"
				},
				{
					"command": "todomd.archiveCompletedTasks",
					"when": "todomd:isActive"
				},
				{
					"command": "todomd.archiveSelectedCompletedTasks",
					"when": "todomd:isActive"
				},
				{
					"command": "todomd.createSimilarTask",
					"when": "todomd:isActive"
				},
				{
					"command": "todomd.setLastVisit",
					"when": "todomd:isDev"
				},
				{
					"command": "todomd.clearGlobalState",
					"when": "todomd:isDev"
				}
			]
		},
		"viewsContainers": {
			"activitybar": [
				{
					"id": "todomd",
					"icon": "./img/checklist.svg",
					"title": "TodoMD"
				}
			]
		},
		"views": {
			"todomd": [
				{
					"id": "todomd.tags",
					"name": "Tags"
				},
				{
					"id": "todomd.tasks",
					"name": "Tasks"
				},
				{
					"id": "todomd.projects",
					"name": "Projects"
				},
				{
					"id": "todomd.contexts",
					"name": "Contexts"
				},
				{
					"id": "todomd.archived",
					"name": "Archived"
				},
				{
					"id": "todomd.generic1",
					"name": "Generic1",
					"when": "todomd:generic1FilterExists"
				},
				{
					"id": "todomd.generic2",
					"name": "Generic2",
					"when": "todomd:generic2FilterExists"
				},
				{
					"id": "todomd.generic3",
					"name": "Generic3",
					"when": "todomd:generic3FilterExists"
				},
				{
					"type": "webview",
					"id": "todomd.webviewTasks",
					"name": "Webview",
					"icon": "img/check.svg"
				}
			]
		}
	},
	"browserslist": [
		"electron 9.2"
	],
	"scripts": {
		"vscode:prepublish": "npm run scss & npm run webview & webpack --mode production --colors",
		"postinstall": "node scripts/copyWebviewResourcesFromNodeModules.js",
		"watch": "concurrently \"npm run watchExtension\" \"npm run watchWebview\" \"npm run watchScss\"",
		"watchExtension": "webpack --mode development --watch --display=minimal",
		"scss": "node-sass media -o media --output-style compressed",
		"watchScss": "npm run scss & node-sass --watch media -o media",
		"webview": "webpack --mode production --config media/webpack.config.js",
		"watchWebview": "webpack --watch --display=minimal --mode development --config media/webpack.config.js",
		"watchTest": "tsc -watch -p ./",
		"test": "node ./dist/test/runTest.js",
		"generateDecorationSchema": "tsc scripts\\generateDecorationSchema.ts && node scripts\\generateDecorationSchema.js"
	},
	"devDependencies": {
		"@types/awesomplete": "^1.1.10",
		"@types/chai": "^4.2.13",
		"@types/glob": "^7.1.3",
		"@types/lodash": "^4.14.162",
		"@types/markdown-table": "^2.0.0",
		"@types/marked": "^1.1.0",
		"@types/mocha": "^7.0.2",
		"@types/node": "^12.12.67",
		"@types/vscode": "^1.50.0",
		"@typescript-eslint/eslint-plugin": "^4.4.1",
		"@typescript-eslint/parser": "^4.4.1",
		"chai": "^4.2.0",
		"concurrently": "^5.3.0",
		"eslint": "^7.11.0",
		"eslint-plugin-no-autofix": "^1.0.1",
		"friendly-errors-webpack-plugin": "^1.7.0",
		"glob": "^7.1.6",
		"mocha": "^7.2.0",
		"node-sass": "^4.14.1",
		"source-map-support": "^0.5.19",
		"stylelint": "^13.7.2",
		"stylelint-csstree-validator": "^1.8.0",
		"stylelint-declaration-block-no-ignored-properties": "^2.3.0",
		"stylelint-declaration-use-variable": "^1.7.2",
		"stylelint-images": "^2.0.1",
		"stylelint-no-unsupported-browser-features": "^4.0.0",
		"stylelint-order": "^4.1.0",
		"stylelint-scss": "^3.18.0",
		"ts-loader": "^8.0.5",
		"typescript": "^4.0.3",
		"typescript-json-schema": "^0.43.0",
		"vscode-codicons": "0.0.12",
		"vscode-test": "^1.4.0",
		"webpack": "^4.44.2",
		"webpack-cli": "^3.3.12"
	},
	"dependencies": {
		"dayjs": "^1.9.3",
		"fuzzysort": "^1.1.4",
		"markdown-table": "^2.0.0",
		"marked": "^1.2.0",
		"lodash": "^4.17.20",
		"awesomplete": "^1.1.5"
	}
}
